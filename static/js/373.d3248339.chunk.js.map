{"version":3,"file":"static/js/373.d3248339.chunk.js","mappings":"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","sources":["components/Filter/Filter.tsx","components/Article/Article.tsx","components/Articles/Articles.tsx","hooks/useDebounce.ts","pages/MainPage.tsx"],"sourcesContent":["import { TextField, InputAdornment, Box, Typography } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useSelector } from \"react-redux\";\nimport { selectItems } from \"redux/articles/selectors\";\nimport { setFilter } from \"redux/articles/filterSlice\";\nimport { useAppDispatch } from \"redux/store\";\nimport clsx from \"clsx\";\nimport \"./Filter.css\";\n\nexport const Filter = () => {\n  const articles = useSelector(selectItems);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Box component=\"header\" className={clsx(\"filter\")}>\n      <TextField\n        id=\"filter-input\"\n        variant=\"outlined\"\n        label=\"Filter by keywords\"\n        placeholder=\"What you want to search?\"\n        className={clsx(\"filter__search-input\")}\n        sx={{ mb: \"40px\" }}\n        onChange={(e) => {\n          dispatch(setFilter(e.target.value));\n        }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      {articles.length > 0 && (\n        <Typography component=\"p\" variant=\"h6\">\n          Results: {articles.length}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n","import { FC } from \"react\";\nimport {\n  Box,\n  Typography,\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n} from \"@mui/material\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport { format } from \"date-fns\";\nimport { useLocation } from \"react-router-dom\";\nimport { IArticleProps } from \"./Article.interface\";\nimport { Link } from \"components/Link\";\nimport clsx from \"clsx\";\nimport \"./Article.css\";\n\nexport const Article: FC<IArticleProps> = ({\n  id,\n  title,\n  imageUrl,\n  summary,\n  updatedAt,\n}) => {\n  const date = format(new Date(updatedAt), \"MMMM do, y \");\n  const location = useLocation();\n\n  return (\n    <Card className={clsx(\"card\")}>\n      <CardMedia component=\"img\" alt={title} height=\"217\" image={imageUrl} />\n      <Box sx={{ p: \"25px\" }}>\n        <CardContent sx={{ p: 0 }}>\n          <Box className={clsx(\"card__calendar-wrapper\")}>\n            <CalendarTodayIcon fontSize=\"small\" />\n            <Typography className={clsx(\"card__date\")}>{date}</Typography>\n          </Box>\n          <Typography\n            component=\"h1\"\n            sx={{\n              color: \"#363636\",\n              fontSize: \"24px\",\n              lineHeight: \"29px\",\n              mb: \"20px\",\n            }}\n          >\n            {title.length > 50 ? title.slice(0, 50) + \"...\" : title}\n          </Typography>\n          <Typography sx={{ mb: \"20px\", fontSize: \"16px\", lineHeight: \"150%\" }}>\n            {summary.slice(0, 100) + \"...\"}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Link\n            sx={{\n              color: \"#363636\",\n              fontWeight: \"700\",\n              fontSize: \" 16px\",\n              lineHeight: \"150%\",\n            }}\n            to={`${id}`}\n            endIcon={<ArrowForwardIcon />}\n            state={{ from: location }}\n          >\n            Read more\n          </Link>\n        </CardActions>\n      </Box>\n    </Card>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport { Article } from \"components/Article\";\nimport { fetchArticles } from \"redux/articles/operations\";\nimport { selectItems, selectFilterStatus } from \"redux/articles/selectors\";\nimport { useAppDispatch } from \"redux/store\";\nimport { useDebounce } from \"hooks/useDebounce\";\nimport clsx from \"clsx\";\nimport \"./Articles.css\";\n\nexport const Articles = () => {\n  const dispatch = useAppDispatch();\n  const articles = useSelector(selectItems);\n  const filterStatus = useSelector(selectFilterStatus);\n  const debouncedFilter = useDebounce(filterStatus, 500);\n\n  useEffect(() => {\n    dispatch(fetchArticles(debouncedFilter));\n  }, [dispatch, debouncedFilter]);\n\n  return (\n    <Box className={clsx(\"container\")}>\n      {articles.length > 0 && (\n        <Grid container spacing=\"45px\">\n          {articles.map(({ id, title, imageUrl, summary, updatedAt }) => (\n            <Grid item xs={4} key={id}>\n              <Article\n                id={id}\n                title={title}\n                imageUrl={imageUrl}\n                summary={summary}\n                updatedAt={updatedAt}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n      {debouncedFilter && <b>No news with title {debouncedFilter}</b>}\n    </Box>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { Filter } from \"components/Filter\";\nimport { Articles } from \"components/Articles\";\n\nconst MainPage = () => {\n  return (\n    <>\n      <Filter />\n      <Articles />\n    </>\n  );\n};\n\nexport default MainPage;\n"],"names":["Filter","articles","useSelector","selectItems","dispatch","useAppDispatch","Box","component","className","clsx","TextField","id","variant","label","placeholder","sx","mb","onChange","e","setFilter","target","value","InputProps","startAdornment","InputAdornment","position","Search","length","Typography","Article","title","imageUrl","summary","updatedAt","date","format","Date","location","useLocation","Card","CardMedia","alt","height","image","p","CardContent","CalendarToday","fontSize","color","lineHeight","slice","CardActions","Link","fontWeight","to","endIcon","ArrowForward","state","from","Articles","debouncedFilter","delay","useState","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","selectFilterStatus","fetchArticles","Grid","container","spacing","map","item","xs"],"sourceRoot":""}